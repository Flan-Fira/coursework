head	1.4;
access;
symbols;
locks;
comment	@ * @;


1.4
date	2011.02.15.07.57.05;	author dmfrank;	state -;
branches;
next	1.3;

1.3
date	2011.02.14.13.13.02;	author dmfrank;	state -;
branches;
next	1.2;

1.2
date	2011.02.02.16.39.52;	author dmfrank;	state -;
branches;
next	1.1;

1.1
date	2011.02.02.16.24.40;	author dmfrank;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@/* $Id: numbers.h,v 1.3 2011-02-13 22:52:16-08 dmfrank - $
 * Derek Frank, dmfrank@@ucsc.edu
 *
 * NAME
 *    numbers - header file
 *
 * DESCRIPTION
 *    Classes defining degrees, points, and inches as doubles and in
 *    format that is readible by Postscript.
 */

#ifndef __NUMBERS_H__
#define __NUMBERS_H__

#include <iostream>
#include <utility>

using namespace std;

#include "trace.h"

const double PTS_PER_INCH = 72;

class degrees {
   friend ostream &operator<< (ostream &, const degrees &);
   public:
      explicit degrees (double init): angle(init) {}
      operator double() const {return angle; }
   private:
      degrees (); // Disable.
      double angle;
};

class points {
   friend ostream &operator<< (ostream &, const points &);
   public:
      explicit points (double init): pointvalue(init) {}
      operator double() const {return pointvalue; }
   private:
      points (); // Disable.
      double pointvalue;
};

class inches {
   friend ostream &operator<< (ostream &, const inches &);
   public:
      explicit inches (double init): pointvalue(init * PTS_PER_INCH) {}
      operator double() const {return pointvalue; }
   private:
      inches (); // Disable.
      double pointvalue;
};

typedef pair <inches, inches> xycoords;

ostream &operator<< (ostream &, const xycoords &);

#endif

@


1.3
log
@-
@
text
@d8 2
a9 1
 *    
@


1.2
log
@-
@
text
@d1 1
a1 1
/* $Id: interp.cpp,v 1.1 2011-02-02 08:09:48-08 dmfrank - $
d3 6
@


1.1
log
@-
@
text
@d1 3
a3 1
// $Id: numbers.h,v 1.1 2011-01-25 18:56:05-08 - - $
@
